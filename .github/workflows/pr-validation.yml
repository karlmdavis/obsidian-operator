name: PR Validation

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  validate-pr:
    name: Validate PR
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Check PR title format
        run: |
          # Ensure PR title doesn't start with WIP
          if [[ "${{ github.event.pull_request.title }}" == WIP* ]]; then
            echo "::error::PR title starts with WIP. Please remove WIP when ready for review."
            exit 1
          fi
          
      - name: Check branch name
        run: |
          # Get the branch name
          BRANCH="${{ github.head_ref }}"
          
          # Check if branch follows naming convention
          if [[ ! "$BRANCH" =~ ^(feature|fix|docs|style|refactor|test|chore|setup)/.+ ]]; then
            echo "::warning::Branch name '$BRANCH' doesn't follow convention: type/description"
          fi
          
      - name: Check for merge conflicts
        run: |
          # This is handled by GitHub, but we can add custom checks if needed
          echo "Checking for merge conflicts..."
          
      - name: Validate file changes
        run: |
          # Check that certain files haven't been modified
          PROTECTED_FILES=".github/workflows/codeql.yml"
          
          for file in $PROTECTED_FILES; do
            if git diff --name-only origin/main..HEAD | grep -q "^$file$"; then
              echo "::warning::Protected file modified: $file"
            fi
          done
          
      - name: Label PR based on files changed
        uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          configuration-path: .github/labeler.yml
        continue-on-error: true